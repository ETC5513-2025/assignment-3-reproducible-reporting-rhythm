---
title: "ETC5513-Assignment3"
author: "Group_03"
format:
  html :
    toc: true 
    number-sections: true
    crossref:
      sec-prefix: "Section"
      sec-labels: "letters-lower"
---

```{r}
#| echo: false
#| warning: false
#| message: false 
#| code-summary: "Library"

library (rmarkdown)
library (knitr)
library (tidyverse)
library (readr)
library (kableExtra)
library (ggplot2)
library (dplyr)
library (quarto)
library (tidytuesdayR)
library(stringr)
library(ggrepel)
library(tidymodels)
library(GGally)  
library(tidytable)

```

```{r}
#| code-fold: true
#| code-summary: "Download and  spool dataset"

data <- read_csv("Student Mental Health Analysis During Online Learning.csv")
head(data,3)


```

# Methodology

![](Images/Pict Methodology.png)








![](Images/Pict Methodology 2.png)

```{r}
#| label: tbl-variable
#| code-fold: true
#| code-summary: "Summary Data"
#| tbl-cap: "Variables included in the analysis"

# Create summary table
var_summary <- data.frame(
  Variable = colnames(data),
  Data_Type = sapply(data, function(x) paste(class(x), collapse = ", "))
)

# Print clean table using knitr::kable
knitr::kable(var_summary, row.names = FALSE, caption = "Variables included in the analysis")


```




# Analysis

```{r}
#| code-fold: true
#| code-summary: "Data Exploration: summary data"

glimpse(data)

```

```{r}
#| code-fold: true
#| code-summary: "Data Exploration: unique code"

lapply(data, unique)
sapply(data, function(x) length(unique(x)))


```

```{r}
#| code-fold: true
#| code-summary: "Data Exploration: Rename Column"

data <- data |> rename(
  Screen_Time = `Screen Time (hrs/day)`,
  Stress_Level = `Stress Level`,
  Sleep_Duration = `Sleep Duration (hrs)`,
  Physical_Activity = `Physical Activity (hrs/week)`,
  Education_Level = `Education Level`,
  Anxious_Before_Exams = `Anxious Before Exams`,
  Academic_Performance_Change = `Academic Performance Change`)

colnames(data)

```

```{r}
#| code-fold: true
#| code-summary: "Data Exploration: Add new column"

final_data <- data |>
  mutate(Education_Level_Group = case_when(
    str_starts(Education_Level, "B") ~ "Bachelor",
    str_starts(Education_Level, "M") ~ "Master",
    str_detect(Education_Level, "8$|9$") ~ "Middle",
    TRUE ~ "High"
  ))


```

```{r}
#| code-fold: true
#| code-summary: "Data Exploration: Create Additional New Column"

final_data |> group_by(Education_Level) |> select (Education_Level,Education_Level_Group)
```

```{r}
#| code-fold: true
#| code-summary: "Data Exploration: Summary of Numerical Variables"

summary(data |> select(Age, Screen_Time , Sleep_Duration, Physical_Activity))
```

```{r}
#| label: "fig-Pie-Chart-CatVariables"
#| fig-cap: "Summary of Students Proportion based on Categorical Variables"
#| code-fold: true
#| code-summary: "Data Exploration: Chart for Numberical Variables"



# Categorical Variables
categorical_vars <- c("Gender", "Education_Level_Group", "Stress_Level", "Anxious_Before_Exams")


# Set Up the color
base_colors <- c("#FFD1BA", "#C0E7D5", "#D2B48C", "#ADD8E6")

# Pivot data
df <- final_data %>%
  select(all_of(categorical_vars)) %>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "value") %>%
  drop_na()

# Ringkasan data dan label
df_summary <- df %>%
  group_by(variable, value) %>%
  summarise(n = n(), .groups = "drop") %>%
  group_by(variable) %>%
  mutate(
    prop = n / sum(n),
    label = paste0(value, ": ", scales::percent(prop, accuracy = 1)),
    ypos = cumsum(prop) - 0.5 * prop
  ) %>%
  ungroup()

# Unique ID for variable and value
df_summary <- df_summary %>%
  mutate(var_val = paste(variable, value, sep = "_"))

# Create the colour gradation
color_map <- df_summary %>%
  group_by(variable) %>%
  summarise(values = list(unique(value))) %>%
  rowwise() %>%
  mutate(
    colors = list(colorRampPalette(base_colors)(length(values))),
    var_vals = list(paste(variable, values, sep = "_"))
  ) %>%
  unnest(c(var_vals, colors)) %>%
  select(var_val = var_vals, color = colors)

# Combined the colour
df_summary <- df_summary %>%
  left_join(color_map, by = "var_val")

# Plot
ggplot(df_summary, aes(x = "", y = prop, fill = var_val)) +
  geom_col(width = 1, color = "white") +
  geom_text(aes(y = ypos, label = label), color = "black", size = 2.5) +
  coord_polar(theta = "y") +
  facet_wrap(~variable, scales = "free") +
  theme_void() +
  theme(
    aspect.ratio = 1,
    strip.text = element_text(size = 11, face = "bold"),
    legend.position = "none"
  ) +
  labs(title = "  ", fill = "Category") +
  scale_fill_manual(values = setNames(df_summary$color, df_summary$var_val))



```

```{r}
#| label: "fig-Bar-Chart-CatVariables-byResponse"
#| fig-cap: "Summary of Students Proportion based on Categorical Variables and Response Variable"
#| code-fold: true
#| code-summary: "Data Exploration: Chart for Categorical Variables"


# Categorical Variables
categorical_vars <- c("Gender", "Education_Level", "Stress_Level", "Anxious_Before_Exams")

# Set up the colours
pastel_colors <- c(
  "Declined" = "#FFD1BA",  
  "Same"     = "#C3CDE6", 
  "Improved" = "#C0E7D5"   
)

# Do visualization
final_data %>%
  select(all_of(categorical_vars), Academic_Performance_Change) %>%
  pivot_longer(cols = all_of(categorical_vars), names_to = "variable", values_to = "value") %>%
  drop_na() %>%
  group_by(variable, value, Academic_Performance_Change) %>%
  summarise(n = n(), .groups = "drop") %>%
  group_by(variable, value) %>%
  mutate(
    prop = n / sum(n),
    label_text = percent(prop, accuracy = 1)
  ) %>%
  ggplot(aes(
    x = value,
    y = prop,
    fill = factor(Academic_Performance_Change, levels = c("Declined","Improved","Same"))  # 
  )) +
  geom_bar(stat = "identity", position = "stack", color = "white") +
  geom_text(
    aes(label = label_text),
    position = position_stack(vjust = 0.5),
    color = "black", size = 3
  ) +
  facet_wrap(~variable, scales = "free_x") +
  scale_y_continuous(labels = percent_format(accuracy = 1)) +
  scale_fill_manual(values = pastel_colors) + 
  labs(
    title = "Proportion of Academic Performance Changes by Category",
    x = "Category",
    y = "Proportion",
    fill = "Performance Change"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    strip.text = element_text(face = "bold"),
    plot.title = element_text(size = 14, face = "bold", hjust = 0.5)
  )

```




```{r}
#| label: "Scatte-Plot-Numerical-Variables"
#| fig-cap: "Summary of Students Proportions based on Categorical Variables and Response Variable"
#| code-fold: true
#| code-summary: "Data Exploration: Chart for Numberical Variables"


data_numerical <- final_data %>%
  select(Age, Screen_Time, Sleep_Duration, Physical_Activity, Academic_Performance_Change) %>%
  as.data.frame()

ggpairs(
  data_numerical,
  columns = 1:4, # Column for Numerical Variables
  aes(color = Academic_Performance_Change)
)

```
```{r}
#| code-fold: true
#| code-summary: "Data Exploration : Add new Variables"


#Code some categorical variables
final_data_add<- final_data %>%
  mutate(
    Stress_Level_Code = case_when(
      `Stress_Level` == "High" ~ 3,
      `Stress_Level` == "Medium" ~ 2,
      `Stress_Level` == "Low" ~ 1,
      TRUE ~ NA_real_
    ),
    Anxious_Before_Exams_Code = case_when(
    `Anxious_Before_Exams` == "Yes" ~ 1,
    `Anxious_Before_Exams` == "No" ~ 0,
      TRUE ~ NA_real_
    )
  )

```

```{r}
#| code-summary: "Data Exploration : Create Dummy Variables"

# create dummy variables
final_data_add  <- final_data_add |>
  tidytable::get_dummies(cols = c(Gender,Education_Level))



```


```{r}
# Select the numeric column

final_data_add <- as.data.frame(final_data_add)

numeric_vars <- names(final_data_add|> select(Age,Screen_Time,Sleep_Duration,Physical_Activity))



# Calculate mean and sd of training
mean <- sapply(final_data_add[numeric_vars], mean, na.rm = TRUE)
sd<- sapply(final_data_add[numeric_vars], sd, na.rm = TRUE)

# add new column and do standardize
for (var in numeric_vars) {
  std_col <- paste0(var, "_std")
  
  final_data_add[[std_col]] <- (final_data_add[[var]] - mean[[var]]) / sd[[var]]
 }

# final_data
final_data_analysis <- final_data_add |> select(
    ends_with("_std"),
    Stress_Level_Code,
    Anxious_Before_Exams_Code,
    starts_with("Gender_"), 
    starts_with("Education_Level_"), 
    Academic_Performance_Change,
    Name
  )

final_data_analysis  <- final_data_analysis %>%
  mutate(Academic_Performance_Change = as.factor(Academic_Performance_Change))


```

```{r}

final_data_analysis <- final_data_analysis %>%
  mutate(Academic_Performance_Change = relevel(Academic_Performance_Change, ref = "Same"))


log_fit <- multinom_reg() |> 
  fit(Academic_Performance_Change ~ ., 
      data = final_data_analysis|> select(-Name,-Education_Level_Group))

summary(log_fit$fit)





```
```{r}



z <- summary(log_fit$fit)$coefficients / summary(log_fit$fit)$standard.errors
p <- 2 * (1 - pnorm(abs(z)))
p  # TABEL P-VALUE tiap variabel



```

